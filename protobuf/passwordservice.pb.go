// Code generated by protoc-gen-go. DO NOT EDIT.
// source: passwordservice.proto

package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// how data is stored in mongo
type UserInformation struct {
	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Auth *Auth `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	// repeated Login logins = 3;
	Passwords            string   `protobuf:"bytes,4,opt,name=passwords,proto3" json:"passwords,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *UserInformation) Reset()         { *m = UserInformation{} }
func (m *UserInformation) String() string { return proto.CompactTextString(m) }
func (*UserInformation) ProtoMessage()    {}
func (*UserInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_passwordservice_f0975a2235a7115e, []int{0}
}
func (m *UserInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInformation.Unmarshal(m, b)
}
func (m *UserInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInformation.Marshal(b, m, deterministic)
}
func (dst *UserInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInformation.Merge(dst, src)
}
func (m *UserInformation) XXX_Size() int {
	return xxx_messageInfo_UserInformation.Size(m)
}
func (m *UserInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInformation.DiscardUnknown(m)
}

var xxx_messageInfo_UserInformation proto.InternalMessageInfo

func (m *UserInformation) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserInformation) GetAuth() *Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *UserInformation) GetPasswords() string {
	if m != nil {
		return m.Passwords
	}
	return ""
}

// user information
type User struct {
	First                string   `protobuf:"bytes,1,opt,name=first,proto3" json:"first,omitempty"`
	Last                 string   `protobuf:"bytes,2,opt,name=last,proto3" json:"last,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_passwordservice_f0975a2235a7115e, []int{1}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetFirst() string {
	if m != nil {
		return m.First
	}
	return ""
}

func (m *User) GetLast() string {
	if m != nil {
		return m.Last
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

// authentication info for server
type Auth struct {
	Dn                   string          `protobuf:"bytes,1,opt,name=dn,proto3" json:"dn,omitempty"`
	AuthPassword         string          `protobuf:"bytes,2,opt,name=authPassword,proto3" json:"authPassword,omitempty"`
	AccessToken          string          `protobuf:"bytes,3,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	Locked               bool            `protobuf:"varint,4,opt,name=locked,proto3" json:"locked,omitempty"`
	FailedLogins         int32           `protobuf:"varint,5,opt,name=failedLogins,proto3" json:"failedLogins,omitempty"`
	AuthQuestions        []*AuthQuestion `protobuf:"bytes,6,rep,name=authQuestions,proto3" json:"authQuestions,omitempty"`
	KnownIps             []string        `protobuf:"bytes,7,rep,name=knownIps,proto3" json:"knownIps,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" bson:"-"`
	XXX_unrecognized     []byte          `json:"-" bson:"-"`
	XXX_sizecache        int32           `json:"-" bson:"-"`
}

func (m *Auth) Reset()         { *m = Auth{} }
func (m *Auth) String() string { return proto.CompactTextString(m) }
func (*Auth) ProtoMessage()    {}
func (*Auth) Descriptor() ([]byte, []int) {
	return fileDescriptor_passwordservice_f0975a2235a7115e, []int{2}
}
func (m *Auth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Auth.Unmarshal(m, b)
}
func (m *Auth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Auth.Marshal(b, m, deterministic)
}
func (dst *Auth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Auth.Merge(dst, src)
}
func (m *Auth) XXX_Size() int {
	return xxx_messageInfo_Auth.Size(m)
}
func (m *Auth) XXX_DiscardUnknown() {
	xxx_messageInfo_Auth.DiscardUnknown(m)
}

var xxx_messageInfo_Auth proto.InternalMessageInfo

func (m *Auth) GetDn() string {
	if m != nil {
		return m.Dn
	}
	return ""
}

func (m *Auth) GetAuthPassword() string {
	if m != nil {
		return m.AuthPassword
	}
	return ""
}

func (m *Auth) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *Auth) GetLocked() bool {
	if m != nil {
		return m.Locked
	}
	return false
}

func (m *Auth) GetFailedLogins() int32 {
	if m != nil {
		return m.FailedLogins
	}
	return 0
}

func (m *Auth) GetAuthQuestions() []*AuthQuestion {
	if m != nil {
		return m.AuthQuestions
	}
	return nil
}

func (m *Auth) GetKnownIps() []string {
	if m != nil {
		return m.KnownIps
	}
	return nil
}

// basic authentication questions for user
type AuthQuestion struct {
	Q                    string   `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	A                    string   `protobuf:"bytes,2,opt,name=a,proto3" json:"a,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *AuthQuestion) Reset()         { *m = AuthQuestion{} }
func (m *AuthQuestion) String() string { return proto.CompactTextString(m) }
func (*AuthQuestion) ProtoMessage()    {}
func (*AuthQuestion) Descriptor() ([]byte, []int) {
	return fileDescriptor_passwordservice_f0975a2235a7115e, []int{3}
}
func (m *AuthQuestion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthQuestion.Unmarshal(m, b)
}
func (m *AuthQuestion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthQuestion.Marshal(b, m, deterministic)
}
func (dst *AuthQuestion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthQuestion.Merge(dst, src)
}
func (m *AuthQuestion) XXX_Size() int {
	return xxx_messageInfo_AuthQuestion.Size(m)
}
func (m *AuthQuestion) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthQuestion.DiscardUnknown(m)
}

var xxx_messageInfo_AuthQuestion proto.InternalMessageInfo

func (m *AuthQuestion) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *AuthQuestion) GetA() string {
	if m != nil {
		return m.A
	}
	return ""
}

// login information fetched from IP stack
type Login struct {
	Timestamp            int64     `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Ip                   string    `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Location             *Location `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-" bson:"-"`
	XXX_unrecognized     []byte    `json:"-" bson:"-"`
	XXX_sizecache        int32     `json:"-" bson:"-"`
}

func (m *Login) Reset()         { *m = Login{} }
func (m *Login) String() string { return proto.CompactTextString(m) }
func (*Login) ProtoMessage()    {}
func (*Login) Descriptor() ([]byte, []int) {
	return fileDescriptor_passwordservice_f0975a2235a7115e, []int{4}
}
func (m *Login) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Login.Unmarshal(m, b)
}
func (m *Login) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Login.Marshal(b, m, deterministic)
}
func (dst *Login) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Login.Merge(dst, src)
}
func (m *Login) XXX_Size() int {
	return xxx_messageInfo_Login.Size(m)
}
func (m *Login) XXX_DiscardUnknown() {
	xxx_messageInfo_Login.DiscardUnknown(m)
}

var xxx_messageInfo_Login proto.InternalMessageInfo

func (m *Login) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Login) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Login) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

type Location struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	CoutryCode           string   `protobuf:"bytes,3,opt,name=coutry_code,json=coutryCode,proto3" json:"coutry_code,omitempty"`
	CoutnryName          string   `protobuf:"bytes,4,opt,name=coutnry_name,json=coutnryName,proto3" json:"coutnry_name,omitempty"`
	RegionCode           string   `protobuf:"bytes,5,opt,name=region_code,json=regionCode,proto3" json:"region_code,omitempty"`
	RegionName           string   `protobuf:"bytes,6,opt,name=region_name,json=regionName,proto3" json:"region_name,omitempty"`
	City                 string   `protobuf:"bytes,7,opt,name=city,proto3" json:"city,omitempty"`
	Zip                  string   `protobuf:"bytes,8,opt,name=zip,proto3" json:"zip,omitempty"`
	Latitude             float32  `protobuf:"fixed32,9,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float32  `protobuf:"fixed32,10,opt,name=longitude,proto3" json:"longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_passwordservice_f0975a2235a7115e, []int{5}
}
func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (dst *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(dst, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Location) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Location) GetCoutryCode() string {
	if m != nil {
		return m.CoutryCode
	}
	return ""
}

func (m *Location) GetCoutnryName() string {
	if m != nil {
		return m.CoutnryName
	}
	return ""
}

func (m *Location) GetRegionCode() string {
	if m != nil {
		return m.RegionCode
	}
	return ""
}

func (m *Location) GetRegionName() string {
	if m != nil {
		return m.RegionName
	}
	return ""
}

func (m *Location) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Location) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *Location) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Location) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

type CrudResponse struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Logins               []*Login `protobuf:"bytes,2,rep,name=logins,proto3" json:"logins,omitempty"`
	Passwords            string   `protobuf:"bytes,3,opt,name=passwords,proto3" json:"passwords,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CrudResponse) Reset()         { *m = CrudResponse{} }
func (m *CrudResponse) String() string { return proto.CompactTextString(m) }
func (*CrudResponse) ProtoMessage()    {}
func (*CrudResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_passwordservice_f0975a2235a7115e, []int{6}
}
func (m *CrudResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrudResponse.Unmarshal(m, b)
}
func (m *CrudResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrudResponse.Marshal(b, m, deterministic)
}
func (dst *CrudResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrudResponse.Merge(dst, src)
}
func (m *CrudResponse) XXX_Size() int {
	return xxx_messageInfo_CrudResponse.Size(m)
}
func (m *CrudResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CrudResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CrudResponse proto.InternalMessageInfo

func (m *CrudResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *CrudResponse) GetLogins() []*Login {
	if m != nil {
		return m.Logins
	}
	return nil
}

func (m *CrudResponse) GetPasswords() string {
	if m != nil {
		return m.Passwords
	}
	return ""
}

type CrudRequest struct {
	ChallengeResponse    string   `protobuf:"bytes,1,opt,name=challengeResponse,proto3" json:"challengeResponse,omitempty"`
	AnswerResponse       string   `protobuf:"bytes,2,opt,name=answerResponse,proto3" json:"answerResponse,omitempty"`
	NewPasswords         string   `protobuf:"bytes,3,opt,name=newPasswords,proto3" json:"newPasswords,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *CrudRequest) Reset()         { *m = CrudRequest{} }
func (m *CrudRequest) String() string { return proto.CompactTextString(m) }
func (*CrudRequest) ProtoMessage()    {}
func (*CrudRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_passwordservice_f0975a2235a7115e, []int{7}
}
func (m *CrudRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrudRequest.Unmarshal(m, b)
}
func (m *CrudRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrudRequest.Marshal(b, m, deterministic)
}
func (dst *CrudRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrudRequest.Merge(dst, src)
}
func (m *CrudRequest) XXX_Size() int {
	return xxx_messageInfo_CrudRequest.Size(m)
}
func (m *CrudRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CrudRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CrudRequest proto.InternalMessageInfo

func (m *CrudRequest) GetChallengeResponse() string {
	if m != nil {
		return m.ChallengeResponse
	}
	return ""
}

func (m *CrudRequest) GetAnswerResponse() string {
	if m != nil {
		return m.AnswerResponse
	}
	return ""
}

func (m *CrudRequest) GetNewPasswords() string {
	if m != nil {
		return m.NewPasswords
	}
	return ""
}

func init() {
	proto.RegisterType((*UserInformation)(nil), "protobuf.UserInformation")
	proto.RegisterType((*User)(nil), "protobuf.User")
	proto.RegisterType((*Auth)(nil), "protobuf.Auth")
	proto.RegisterType((*AuthQuestion)(nil), "protobuf.AuthQuestion")
	proto.RegisterType((*Login)(nil), "protobuf.Login")
	proto.RegisterType((*Location)(nil), "protobuf.Location")
	proto.RegisterType((*CrudResponse)(nil), "protobuf.CrudResponse")
	proto.RegisterType((*CrudRequest)(nil), "protobuf.CrudRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PasswordserviceClient is the client API for Passwordservice service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PasswordserviceClient interface {
	// reads a user information
	CrudPasswords(ctx context.Context, in *CrudRequest, opts ...grpc.CallOption) (*CrudResponse, error)
}

type passwordserviceClient struct {
	cc *grpc.ClientConn
}

func NewPasswordserviceClient(cc *grpc.ClientConn) PasswordserviceClient {
	return &passwordserviceClient{cc}
}

func (c *passwordserviceClient) CrudPasswords(ctx context.Context, in *CrudRequest, opts ...grpc.CallOption) (*CrudResponse, error) {
	out := new(CrudResponse)
	err := c.cc.Invoke(ctx, "/protobuf.Passwordservice/CrudPasswords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PasswordserviceServer is the server API for Passwordservice service.
type PasswordserviceServer interface {
	// reads a user information
	CrudPasswords(context.Context, *CrudRequest) (*CrudResponse, error)
}

func RegisterPasswordserviceServer(s *grpc.Server, srv PasswordserviceServer) {
	s.RegisterService(&_Passwordservice_serviceDesc, srv)
}

func _Passwordservice_CrudPasswords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CrudRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PasswordserviceServer).CrudPasswords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Passwordservice/CrudPasswords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PasswordserviceServer).CrudPasswords(ctx, req.(*CrudRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Passwordservice_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.Passwordservice",
	HandlerType: (*PasswordserviceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CrudPasswords",
			Handler:    _Passwordservice_CrudPasswords_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "passwordservice.proto",
}

func init() {
	proto.RegisterFile("passwordservice.proto", fileDescriptor_passwordservice_f0975a2235a7115e)
}

var fileDescriptor_passwordservice_f0975a2235a7115e = []byte{
	// 638 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xc1, 0x6e, 0xd3, 0x4c,
	0x10, 0x96, 0x1d, 0x27, 0x4d, 0xc6, 0x69, 0xfb, 0xff, 0x2b, 0x5a, 0x59, 0x55, 0x25, 0x8c, 0x0f,
	0x10, 0x21, 0x94, 0x4a, 0xe1, 0xca, 0x05, 0x55, 0x42, 0xaa, 0x54, 0xa1, 0xb2, 0x82, 0x73, 0xb5,
	0xb5, 0x27, 0xee, 0xaa, 0xce, 0xae, 0xeb, 0x5d, 0x13, 0x85, 0x23, 0x17, 0x1e, 0x00, 0xde, 0x8c,
	0x57, 0xe0, 0x09, 0x78, 0x02, 0xb4, 0xeb, 0x8d, 0x1d, 0x87, 0x0b, 0xa7, 0xec, 0x7c, 0xf3, 0xf9,
	0x9b, 0x6f, 0x66, 0x67, 0x03, 0x27, 0x25, 0x53, 0x6a, 0x2d, 0xab, 0x4c, 0x61, 0xf5, 0x99, 0xa7,
	0x38, 0x2f, 0x2b, 0xa9, 0x25, 0x19, 0xdb, 0x9f, 0xbb, 0x7a, 0x79, 0x76, 0x9e, 0x4b, 0x99, 0x17,
	0x78, 0xc1, 0x4a, 0x7e, 0xc1, 0x84, 0x90, 0x9a, 0x69, 0x2e, 0x85, 0x6a, 0x78, 0xc9, 0x1a, 0x8e,
	0x3f, 0x29, 0xac, 0xae, 0xc4, 0x52, 0x56, 0x2b, 0x9b, 0x21, 0x09, 0x04, 0xb5, 0xc2, 0x2a, 0xf2,
	0x62, 0x6f, 0x16, 0x2e, 0x8e, 0xe6, 0x5b, 0xa5, 0xb9, 0x21, 0x52, 0x9b, 0x33, 0x1c, 0x56, 0xeb,
	0xfb, 0xc8, 0xdf, 0xe7, 0xbc, 0xad, 0xf5, 0x3d, 0xb5, 0x39, 0x72, 0x0e, 0x93, 0xd6, 0x5b, 0x14,
	0xc4, 0xde, 0x6c, 0x42, 0x3b, 0x20, 0x79, 0x07, 0x81, 0xd1, 0x23, 0x4f, 0x60, 0xb8, 0xe4, 0x95,
	0xd2, 0xb6, 0xdc, 0x84, 0x36, 0x01, 0x21, 0x10, 0x14, 0x4c, 0x69, 0xab, 0x3f, 0xa1, 0xf6, 0x6c,
	0x98, 0xb8, 0x62, 0xbc, 0x88, 0x06, 0x0d, 0xd3, 0x06, 0xc9, 0x6f, 0x0f, 0x02, 0x53, 0x94, 0x1c,
	0x81, 0x9f, 0x09, 0xa7, 0xe2, 0x67, 0xa6, 0x8d, 0xa9, 0xb1, 0x71, 0xe3, 0x2a, 0x3a, 0xa9, 0x1e,
	0x46, 0x62, 0x08, 0x59, 0x9a, 0xa2, 0x52, 0x1f, 0xe5, 0x03, 0x0a, 0x27, 0xbc, 0x0b, 0x91, 0x53,
	0x18, 0x15, 0x32, 0x7d, 0xc0, 0xcc, 0x76, 0x30, 0xa6, 0x2e, 0x32, 0xea, 0x4b, 0xc6, 0x0b, 0xcc,
	0xae, 0x65, 0xce, 0x85, 0x8a, 0x86, 0xb1, 0x37, 0x1b, 0xd2, 0x1e, 0x46, 0xde, 0xc0, 0xa1, 0xa9,
	0xf6, 0xa1, 0x46, 0x65, 0x47, 0x1e, 0x8d, 0xe2, 0xc1, 0x2c, 0x5c, 0x9c, 0xf6, 0xa7, 0xb5, 0x4d,
	0xd3, 0x3e, 0x99, 0x9c, 0xc1, 0xf8, 0x41, 0xc8, 0xb5, 0xb8, 0x2a, 0x55, 0x74, 0x10, 0x0f, 0x66,
	0x13, 0xda, 0xc6, 0xc9, 0x4b, 0x98, 0xee, 0x7e, 0x4a, 0xa6, 0xe0, 0x3d, 0xba, 0xd6, 0xbd, 0x47,
	0x13, 0x31, 0xd7, 0xae, 0xc7, 0x12, 0x84, 0xa1, 0xf5, 0x63, 0xee, 0x43, 0xf3, 0x15, 0x2a, 0xcd,
	0x56, 0xa5, 0x25, 0x0f, 0x68, 0x07, 0x98, 0xf1, 0xf1, 0xd2, 0x7d, 0xe5, 0xf3, 0x92, 0xcc, 0x61,
	0x5c, 0xc8, 0xd4, 0x6e, 0x84, 0x9d, 0x4b, 0xb8, 0x20, 0x9d, 0xef, 0x6b, 0x97, 0xa1, 0x2d, 0x27,
	0xf9, 0xe1, 0xc3, 0x78, 0x0b, 0x3b, 0x31, 0xaf, 0x15, 0x23, 0x10, 0xe8, 0x4d, 0x89, 0xdb, 0xeb,
	0x34, 0x67, 0xf2, 0x14, 0xc2, 0x54, 0xd6, 0xba, 0xda, 0xdc, 0xa6, 0x32, 0x43, 0x37, 0x7b, 0x68,
	0xa0, 0x4b, 0x99, 0x21, 0x79, 0x06, 0x53, 0x13, 0x89, 0x6a, 0x73, 0x2b, 0xd8, 0x0a, 0xdd, 0x0a,
	0x85, 0x0e, 0x7b, 0xcf, 0x56, 0x56, 0xa3, 0xc2, 0x9c, 0x4b, 0xd1, 0x68, 0x0c, 0x1b, 0x8d, 0x06,
	0xb2, 0x1a, 0x1d, 0xc1, 0x4a, 0x8c, 0x76, 0x09, 0x56, 0x81, 0x40, 0x90, 0x72, 0xbd, 0x89, 0x0e,
	0x1a, 0x67, 0xe6, 0x4c, 0xfe, 0x83, 0xc1, 0x17, 0x5e, 0x46, 0x63, 0x0b, 0x99, 0xa3, 0xb9, 0x8b,
	0x82, 0x69, 0xae, 0xeb, 0x0c, 0xa3, 0x49, 0xec, 0xcd, 0x7c, 0xda, 0xc6, 0x66, 0xac, 0x85, 0x14,
	0x79, 0x93, 0x04, 0x9b, 0xec, 0x80, 0x64, 0x03, 0xd3, 0xcb, 0xaa, 0xce, 0x28, 0xaa, 0x52, 0x0a,
	0x85, 0xff, 0xf4, 0xb8, 0x5e, 0x98, 0x9d, 0xb3, 0x5b, 0xe5, 0xdb, 0x85, 0x39, 0xde, 0x1d, 0x7c,
	0xce, 0x05, 0x75, 0xe9, 0xfe, 0x0b, 0x1b, 0xec, 0xbf, 0xb0, 0x6f, 0x1e, 0x84, 0x4d, 0xed, 0x47,
	0xb3, 0x27, 0xe4, 0x15, 0xfc, 0x9f, 0xde, 0xb3, 0xa2, 0x40, 0x91, 0xe3, 0xd6, 0x8f, 0xbb, 0xa3,
	0xbf, 0x13, 0xe4, 0x39, 0x1c, 0x31, 0xa1, 0xd6, 0x58, 0xb5, 0xd4, 0xe6, 0xf2, 0xf6, 0x50, 0xf3,
	0x10, 0x04, 0xae, 0x6f, 0xf6, 0x6c, 0xf4, 0xb0, 0x05, 0xc2, 0xf1, 0x4d, 0xff, 0x5f, 0x8a, 0x50,
	0x38, 0x34, 0xde, 0x5a, 0x98, 0x9c, 0x74, 0x4d, 0xee, 0x98, 0x3e, 0x3b, 0xdd, 0x87, 0x9b, 0xb2,
	0x09, 0xf9, 0xfa, 0xf3, 0xd7, 0x77, 0x7f, 0x9a, 0xc0, 0x45, 0xdb, 0xf0, 0xdd, 0xc8, 0x52, 0x5f,
	0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0xc1, 0xd2, 0x7b, 0x3b, 0x13, 0x05, 0x00, 0x00,
}
