syntax = "proto3";

package protobuf;

import "google/api/annotations.proto";

// Interface exported by the server.
service Passwordservice {

    // reads passwords
    rpc ReadPasswords(CrudRequest) returns (CrudResponse) {
        option (google.api.http) = {
            get : "/passwords",
        };
    }

    // update passwords
    rpc UpdatePasswords(CrudRequest) returns (CrudResponse) {
        option (google.api.http) = {
            post : "/passwords",
        };
    }

    // get challenge token
    rpc GenerateChallenge(ChallengeRequest) returns (ChallengeResponse) {
        option (google.api.http) = {
            post : "/challenge",
        };
    }

}

/////////////////
// Data models //
/////////////////

// how data is stored in mongo
message UserInformation {
    User user = 1;
    Auth auth = 2;
    // repeated Login logins = 3;
    string passwords = 4;
}

// user information
message User {
    string first = 1;
    string last = 2;
    string email = 3;
}

// authentication info for server
message Auth {
    string dn = 1;
    string authPassword = 2;
    string accessToken = 3;
    bool locked = 4;
    int32 failedLogins = 5;
    repeated AuthQuestion authQuestions = 6;
    repeated string knownIps = 7;
}

// basic authentication questions for user
message AuthQuestion {
    string q = 1;
    string a = 2;
}

// login information fetched from IP stack
message Login {
    int64 timestamp = 1;
    string ip = 2;
    Location location = 3;
}

message Location {
    string ip = 1;
    string type = 2;
    string coutry_code = 3;
    string coutnry_name = 4;
    string region_code = 5;
    string region_name = 6;
    string city = 7;
    string zip = 8;
    float latitude = 9;
    float longitude = 10;
}


////////////////////////
// request / response //
////////////////////////

message CrudResponse {
    string passwords = 1;
}

message CrudRequest {
    string newPasswords = 1;
    string user = 2;
}

message ChallengeRequest {
    string userQuestionResponse = 1;
    Location location = 2;
}

message ChallengeResponse {
    string error = 1;
    string userQuestion = 2;
    repeated Location logins = 3;
    string user = 4;
}